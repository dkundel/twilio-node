/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Response = require('../../../../http/response');
import V2010 = require('../../V2010');

declare function ValidationRequestList(version: V2010, accountSid: string): ValidationRequestListInstance

interface ValidationRequestResource {
  /**
   * The account_sid
   */
  account_sid: string;
  /**
   * The call_sid
   */
  call_sid: string;
  /**
   * The friendly_name
   */
  friendly_name: string;
  /**
   * The phone_number
   */
  phone_number: string;
  /**
   * The validation_code
   */
  validation_code: number;
}

interface ValidationRequestPayload extends ValidationRequestResource, Page.TwilioResponsePayload {
}

interface ValidationRequestSolution {
  accountSid: string;
}

interface ValidationRequestListCreateOptions {
  /**
   * The call_delay
   */
  callDelay?: number;
  /**
   * The extension
   */
  extension?: string;
  /**
   * The friendly_name
   */
  friendlyName?: string;
  /**
   * The phone_number
   */
  phoneNumber: string;
  /**
   * The status_callback
   */
  statusCallback?: string;
  /**
   * The status_callback_method
   */
  statusCallbackMethod?: string;
}

interface ValidationRequestListInstance {
  /**
   * create a ValidationRequestInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed ValidationRequestInstance
   */
  create(opts: ValidationRequestListCreateOptions): Promise<ValidationRequestInstance>;
  /**
   * create a ValidationRequestInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  create(opts: ValidationRequestListCreateOptions, callback: (error: Error | null, items: ValidationRequestInstance) => any): void;
}

declare class ValidationRequestPage extends Page<V2010, ValidationRequestPayload, ValidationRequestResource, ValidationRequestInstance> {
  constructor(version: V2010, response: Response<string>, solution: ValidationRequestSolution);

  /**
   * Build an instance of ValidationRequestInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: ValidationRequestPayload): ValidationRequestInstance;
}

declare class ValidationRequestInstance {
  /**
   * @param version - Version of the resource
   * @param payload - The instance payload
   */
  constructor(version: V2010, payload: ValidationRequestPayload);

  private _proxy: ValidationRequestContext;
  /**
   * The account_sid
   */
  accountSid: string;
  /**
   * The call_sid
   */
  callSid: string;
  /**
   * The friendly_name
   */
  friendlyName: string;
  /**
   * The phone_number
   */
  phoneNumber: string;
  /**
   * The validation_code
   */
  validationCode: number;
}

export {ValidationRequestPage, ValidationRequestListCreateOptions, ValidationRequestResource, ValidationRequestPayload, ValidationRequestInstance, ValidationRequestListInstance, ValidationRequestList, ValidationRequestSolution}
