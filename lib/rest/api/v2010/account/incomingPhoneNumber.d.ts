/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Response = require('../../../../http/response');
import V2010 = require('../../V2010');
import { AssignedAddOnListInstance } from './incomingPhoneNumber/assignedAddOn';
import { ListEachOptions, ListOptions, PageOptions } from '../../../../interfaces';

declare function IncomingPhoneNumberList(version: V2010, accountSid: string): IncomingPhoneNumberListInstance

type IncomingPhoneNumberAddressRequirement = 'none'|'any'|'local'|'foreign';

type IncomingPhoneNumberEmergencyStatus = 'Active'|'Inactive';

type IncomingPhoneNumberVoiceReceiveMode = 'voice'|'fax';

interface IncomingPhoneNumberResource {
  /**
   * The unique id of the Account responsible for this phone number.
   */
  account_sid: string;
  /**
   * This indicates whether the phone number requires you or your customer to have an Address registered with Twilio. Possible values are `none`, `any`, `local`, or `foreign`.
   */
  address_requirements: IncomingPhoneNumberAddressRequirement;
  /**
   * The 34 character sid of the address Twilio should use to associate with the number. Addresses are required in some regions to meet local regulations
   */
  address_sid: string;
  /**
   * Calls to this phone number will start a new TwiML session with this API version.
   */
  api_version: string;
  /**
   * Phone numbers new to the Twilio platform are marked as beta. Possible values are either true or `false`.
   */
  beta: boolean;
  /**
   * This is a set of boolean properties that indicate whether a phone number can receive calls or messages.  Possible capabilities are  `Voice`, `SMS`, and `MMS` with each having a value of either `true` or `false`.
   */
  capabilities: string;
  /**
   * The date that this resource was created, given as GMT RFC 2822 format.
   */
  date_created: Date;
  /**
   * The date that this resource was last updated, given as GMT RFC 2822 format.
   */
  date_updated: Date;
  /**
   * The emergency_address_sid
   */
  emergency_address_sid: string;
  /**
   * The emergency_status
   */
  emergency_status: IncomingPhoneNumberEmergencyStatus;
  /**
   * A human readable descriptive text for this resource, up to 64 characters long. By default, the `FriendlyName` is a nicely formatted version of the phone number.
   */
  friendly_name: string;
  /**
   * The 34 character sid of the identity Twilio should use to associate with the number. Identities are required in some regions to meet local regulations
   */
  identity_sid: string;
  /**
   * The origin
   */
  origin: string;
  /**
   * The incoming phone number. e.g., +16175551212 (E.164 format)
   */
  phone_number: string;
  /**
   * A 34 character string that uniquely identifies this resource.
   */
  sid: string;
  /**
   * The 34 character sid of the application Twilio should use to handle SMSs sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.
   */
  sms_application_sid: string;
  /**
   * The HTTP method Twilio will use when requesting the above URL. Either `GET` or `POST`.
   */
  sms_fallback_method: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML from `SmsUrl`.
   */
  sms_fallback_url: string;
  /**
   * The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.
   */
  sms_method: string;
  /**
   * The URL Twilio will request when receiving an incoming SMS message to this number.
   */
  sms_url: string;
  /**
   * The URL that Twilio will request to pass status parameters (such as call ended) to your application.
   */
  status_callback: string;
  /**
   * The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`.
   */
  status_callback_method: string;
  /**
   * The 34 character sid of the Trunk Twilio should use to handle phone calls to this number. If a `TrunkSid` is present, Twilio will ignore all of the voice urls  and voice applications above and use those set on the Trunk. Setting a `TrunkSid` will automatically delete your `VoiceApplicationSid` and vice versa.
   */
  trunk_sid: string;
  /**
   * he URI for this resource, relative to `https://api.twilio.com`.
   */
  uri: string;
  /**
   * The 34 character sid of the application Twilio should use to handle phone calls to this number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.
   */
  voice_application_sid: string;
  /**
   * Look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Either `true` or `false`.
   */
  voice_caller_id_lookup: boolean;
  /**
   * The HTTP method Twilio will use when requesting the `VoiceFallbackUrl`. Either `GET` or `POST`.
   */
  voice_fallback_method: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.
   */
  voice_fallback_url: string;
  /**
   * The HTTP method Twilio will use when requesting the above `Url`. Either `GET` or `POST`.
   */
  voice_method: string;
  /**
   * The URL Twilio will request when this phone number receives a call. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.
   */
  voice_url: string;
}

interface IncomingPhoneNumberPayload extends IncomingPhoneNumberResource, Page.TwilioResponsePayload {
}

interface IncomingPhoneNumberSolution {
  accountSid: string;
}

interface IncomingPhoneNumberListEachOptions extends ListEachOptions<IncomingPhoneNumberInstance> {
  /**
   * Include phone numbers new to the Twilio platform
   */
  beta?: boolean;
  /**
   * Only show the incoming phone number resources with friendly names that exactly match this name
   */
  friendlyName?: string;
  /**
   * The origin
   */
  origin?: string;
  /**
   * Only show the incoming phone number resources that match this pattern
   */
  phoneNumber?: string;
}

interface IncomingPhoneNumberListOptions extends ListOptions<IncomingPhoneNumberInstance> {
  /**
   * Include phone numbers new to the Twilio platform
   */
  beta?: boolean;
  /**
   * Only show the incoming phone number resources with friendly names that exactly match this name
   */
  friendlyName?: string;
  /**
   * The origin
   */
  origin?: string;
  /**
   * Only show the incoming phone number resources that match this pattern
   */
  phoneNumber?: string;
}

interface IncomingPhoneNumberListPageOptions extends PageOptions<IncomingPhoneNumberPage> {
  /**
   * Include phone numbers new to the Twilio platform
   */
  beta?: boolean;
  /**
   * Only show the incoming phone number resources with friendly names that exactly match this name
   */
  friendlyName?: string;
  /**
   * The origin
   */
  origin?: string;
  /**
   * Only show the incoming phone number resources that match this pattern
   */
  phoneNumber?: string;
}

interface IncomingPhoneNumberListCreateOptions {
  /**
   * The 34 character sid of the address Twilio should use to associate with the number. Addresses are required in some regions to meet local regulations
   */
  addressSid?: string;
  /**
   * Calls to this phone number will start a new TwiML session with this API version.
   */
  apiVersion?: string;
  /**
   * The desired area code for the new phone number. Any three digit US or Canada rea code is valid
   */
  areaCode?: string;
  /**
   * The emergency_address_sid
   */
  emergencyAddressSid?: string;
  /**
   * The emergency_status
   */
  emergencyStatus?: IncomingPhoneNumberEmergencyStatus;
  /**
   * A human readable descriptive text for this resource, up to 64 characters long. By default, the `FriendlyName` is a nicely formatted version of the phone number.
   */
  friendlyName?: string;
  /**
   * The 34 character sid of the identity Twilio should use to associate with the number. Identities are required in some regions to meet local regulations
   */
  identitySid?: string;
  /**
   * The phone number to purchase. e.g., +16175551212 (E.164 format)
   */
  phoneNumber?: string;
  /**
   * The 34 character sid of the application Twilio should use to handle SMSs sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.
   */
  smsApplicationSid?: string;
  /**
   * The HTTP method Twilio will use when requesting the above URL. Either `GET` or `POST`.
   */
  smsFallbackMethod?: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML from `SmsUrl`.
   */
  smsFallbackUrl?: string;
  /**
   * The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.
   */
  smsMethod?: string;
  /**
   * The URL Twilio will request when receiving an incoming SMS message to this number.
   */
  smsUrl?: string;
  /**
   * The URL that Twilio will request to pass status parameters (such as call ended) to your application.
   */
  statusCallback?: string;
  /**
   * The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`.
   */
  statusCallbackMethod?: string;
  /**
   * The 34 character sid of the Trunk Twilio should use to handle phone calls to this number. If a `TrunkSid` is present, Twilio will ignore all of the voice urls  and voice applications above and use those set on the Trunk. Setting a `TrunkSid` will automatically delete your `VoiceApplicationSid` and vice versa.
   */
  trunkSid?: string;
  /**
   * The 34 character sid of the application Twilio should use to handle phone calls to this number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.
   */
  voiceApplicationSid?: string;
  /**
   * Look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Either `true` or `false`.
   */
  voiceCallerIdLookup?: boolean;
  /**
   * The HTTP method Twilio will use when requesting the `VoiceFallbackUrl`. Either `GET` or `POST`.
   */
  voiceFallbackMethod?: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.
   */
  voiceFallbackUrl?: string;
  /**
   * The HTTP method Twilio will use when requesting the above `Url`. Either `GET` or `POST`.
   */
  voiceMethod?: string;
  /**
   * The URL Twilio will request when this phone number receives a call. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.
   */
  voiceUrl?: string;
}

interface IncomingPhoneNumberListInstance {
  /**
   * Gets context of a single IncomingPhoneNumber resource
   *
   * @param sid - Fetch by unique incoming-phone-number Sid
   */
  (sid: string): IncomingPhoneNumberContext;
  /**
   * create a IncomingPhoneNumberInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed IncomingPhoneNumberInstance
   */
  create(opts?: IncomingPhoneNumberListCreateOptions): Promise<IncomingPhoneNumberInstance>;
  /**
   * create a IncomingPhoneNumberInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  create(opts: IncomingPhoneNumberListCreateOptions, callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * create a IncomingPhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  create(callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * Streams IncomingPhoneNumberInstance records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param opts - Options for request
   */
  each(opts?: IncomingPhoneNumberListEachOptions): void;
  /**
   * Streams IncomingPhoneNumberInstance records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param callback - Callback to handle processed record
   */
  each(callback: (item: IncomingPhoneNumberInstance, done: (err?: Error) => void) => void): any;
  /**
   * Gets context of a single IncomingPhoneNumber resource
   *
   * @param sid - Fetch by unique incoming-phone-number Sid
   */
  get(sid: string): IncomingPhoneNumberContext;
  /**
   * Retrieve a single target page of IncomingPhoneNumberInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param targetUrl - API-generated URL for the requested results page
   */
  getPage(targetUrl: string): Promise<IncomingPhoneNumberPage>;
  /**
   * Retrieve a single target page of IncomingPhoneNumberInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param targetUrl - API-generated URL for the requested results page
   * @param callback - Callback to handle processed record
   */
  getPage(targetUrl: string, callback: (error: Error | null, items: IncomingPhoneNumberPage) => any): void;
  /**
   * Lists IncomingPhoneNumberInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param opts - Options for request
   */
  list(opts?: IncomingPhoneNumberListOptions): Promise<IncomingPhoneNumberInstance[]>;
  /**
   * Lists IncomingPhoneNumberInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  list(opts: IncomingPhoneNumberListOptions, callback: (error: Error | null, items: IncomingPhoneNumberInstance[]) => any): void;
  /**
   * Lists IncomingPhoneNumberInstance records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param callback - Callback to handle processed record
   */
  list(callback: (error: Error | null, items: IncomingPhoneNumberInstance[]) => any): void;
  /**
   * Retrieve a single page of IncomingPhoneNumberInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param opts - Options for request
   */
  page(opts?: IncomingPhoneNumberListPageOptions): Promise<IncomingPhoneNumberPage>;
  /**
   * Retrieve a single page of IncomingPhoneNumberInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  page(opts: IncomingPhoneNumberListPageOptions, callback: (error: Error | null, items: IncomingPhoneNumberPage) => any): void;
  /**
   * Retrieve a single page of IncomingPhoneNumberInstance records from the API.
   * Request is executed immediately
   *
   * If a function is passed as the first argument, it will be used as the callback function.
   *
   * @param callback - Callback to handle processed record
   */
  page(callback: (error: Error | null, items: IncomingPhoneNumberPage) => any): void;
}

interface IncomingPhoneNumberListFetchOptions {
  /**
   * The unique id of the Account to which you wish to transfer this phone number
   */
  accountSid?: string;
  /**
   * The 34 character sid of the address Twilio should use to associate with the number. Addresses are required in some regions to meet local regulations
   */
  addressSid?: string;
  /**
   * Calls to this phone number will start a new TwiML session with this API version.
   */
  apiVersion?: string;
  /**
   * The emergency_address_sid
   */
  emergencyAddressSid?: string;
  /**
   * The emergency_status
   */
  emergencyStatus?: IncomingPhoneNumberEmergencyStatus;
  /**
   * A human readable descriptive text for this resource, up to 64 characters long. By default, the `FriendlyName` is a nicely formatted version of the phone number.
   */
  friendlyName?: string;
  /**
   * The 34 character sid of the identity Twilio should use to associate with the number. Identities are required in some regions to meet local regulations
   */
  identitySid?: string;
  /**
   * The 34 character sid of the application Twilio should use to handle SMSs sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.
   */
  smsApplicationSid?: string;
  /**
   * The HTTP method Twilio will use when requesting the above URL. Either `GET` or `POST`.
   */
  smsFallbackMethod?: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML from `SmsUrl`.
   */
  smsFallbackUrl?: string;
  /**
   * The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.
   */
  smsMethod?: string;
  /**
   * The URL Twilio will request when receiving an incoming SMS message to this number.
   */
  smsUrl?: string;
  /**
   * The URL that Twilio will request to pass status parameters (such as call ended) to your application.
   */
  statusCallback?: string;
  /**
   * The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`.
   */
  statusCallbackMethod?: string;
  /**
   * The 34 character sid of the Trunk Twilio should use to handle phone calls to this number. If a `TrunkSid` is present, Twilio will ignore all of the voice urls  and voice applications above and use those set on the Trunk. Setting a `TrunkSid` will automatically delete your `VoiceApplicationSid` and vice versa.
   */
  trunkSid?: string;
  /**
   * The 34 character sid of the application Twilio should use to handle phone calls to this number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.
   */
  voiceApplicationSid?: string;
  /**
   * Look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Either `true` or `false`.
   */
  voiceCallerIdLookup?: boolean;
  /**
   * The HTTP method Twilio will use when requesting the `VoiceFallbackUrl`. Either `GET` or `POST`.
   */
  voiceFallbackMethod?: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.
   */
  voiceFallbackUrl?: string;
  /**
   * The HTTP method Twilio will use when requesting the above `Url`. Either `GET` or `POST`.
   */
  voiceMethod?: string;
  /**
   * The voice_receive_mode
   */
  voiceReceiveMode?: IncomingPhoneNumberVoiceReceiveMode;
  /**
   * The URL Twilio will request when this phone number receives a call. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.
   */
  voiceUrl?: string;
}

interface IncomingPhoneNumberListFetchOptions {
  /**
   * The unique id of the Account to which you wish to transfer this phone number
   */
  accountSid?: string;
  /**
   * The 34 character sid of the address Twilio should use to associate with the number. Addresses are required in some regions to meet local regulations
   */
  addressSid?: string;
  /**
   * Calls to this phone number will start a new TwiML session with this API version.
   */
  apiVersion?: string;
  /**
   * The emergency_address_sid
   */
  emergencyAddressSid?: string;
  /**
   * The emergency_status
   */
  emergencyStatus?: IncomingPhoneNumberEmergencyStatus;
  /**
   * A human readable descriptive text for this resource, up to 64 characters long. By default, the `FriendlyName` is a nicely formatted version of the phone number.
   */
  friendlyName?: string;
  /**
   * The 34 character sid of the identity Twilio should use to associate with the number. Identities are required in some regions to meet local regulations
   */
  identitySid?: string;
  /**
   * The 34 character sid of the application Twilio should use to handle SMSs sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.
   */
  smsApplicationSid?: string;
  /**
   * The HTTP method Twilio will use when requesting the above URL. Either `GET` or `POST`.
   */
  smsFallbackMethod?: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML from `SmsUrl`.
   */
  smsFallbackUrl?: string;
  /**
   * The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.
   */
  smsMethod?: string;
  /**
   * The URL Twilio will request when receiving an incoming SMS message to this number.
   */
  smsUrl?: string;
  /**
   * The URL that Twilio will request to pass status parameters (such as call ended) to your application.
   */
  statusCallback?: string;
  /**
   * The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`.
   */
  statusCallbackMethod?: string;
  /**
   * The 34 character sid of the Trunk Twilio should use to handle phone calls to this number. If a `TrunkSid` is present, Twilio will ignore all of the voice urls  and voice applications above and use those set on the Trunk. Setting a `TrunkSid` will automatically delete your `VoiceApplicationSid` and vice versa.
   */
  trunkSid?: string;
  /**
   * The 34 character sid of the application Twilio should use to handle phone calls to this number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.
   */
  voiceApplicationSid?: string;
  /**
   * Look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Either `true` or `false`.
   */
  voiceCallerIdLookup?: boolean;
  /**
   * The HTTP method Twilio will use when requesting the `VoiceFallbackUrl`. Either `GET` or `POST`.
   */
  voiceFallbackMethod?: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.
   */
  voiceFallbackUrl?: string;
  /**
   * The HTTP method Twilio will use when requesting the above `Url`. Either `GET` or `POST`.
   */
  voiceMethod?: string;
  /**
   * The voice_receive_mode
   */
  voiceReceiveMode?: IncomingPhoneNumberVoiceReceiveMode;
  /**
   * The URL Twilio will request when this phone number receives a call. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.
   */
  voiceUrl?: string;
}

declare class IncomingPhoneNumberPage extends Page<V2010, IncomingPhoneNumberPayload, IncomingPhoneNumberResource, IncomingPhoneNumberInstance> {
  constructor(version: V2010, response: Response<string>, solution: IncomingPhoneNumberSolution);

  /**
   * Build an instance of IncomingPhoneNumberInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: IncomingPhoneNumberPayload): IncomingPhoneNumberInstance;
}

declare class IncomingPhoneNumberInstance {
  /**
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - The account_sid
   * @param sid - Fetch by unique incoming-phone-number Sid
   */
  constructor(version: V2010, payload: IncomingPhoneNumberPayload, accountSid: string, sid: string);

  private _proxy: IncomingPhoneNumberContext;
  /**
   * The unique id of the Account responsible for this phone number.
   */
  accountSid: string;
  /**
   * This indicates whether the phone number requires you or your customer to have an Address registered with Twilio. Possible values are `none`, `any`, `local`, or `foreign`.
   */
  addressRequirements: IncomingPhoneNumberAddressRequirement;
  /**
   * The 34 character sid of the address Twilio should use to associate with the number. Addresses are required in some regions to meet local regulations
   */
  addressSid: string;
  /**
   * Calls to this phone number will start a new TwiML session with this API version.
   */
  apiVersion: string;
  assignedAddOns(): AssignedAddOnListInstance;
  /**
   * Phone numbers new to the Twilio platform are marked as beta. Possible values are either true or `false`.
   */
  beta: boolean;
  /**
   * This is a set of boolean properties that indicate whether a phone number can receive calls or messages.  Possible capabilities are  `Voice`, `SMS`, and `MMS` with each having a value of either `true` or `false`.
   */
  capabilities: string;
  /**
   * The date that this resource was created, given as GMT RFC 2822 format.
   */
  dateCreated: Date;
  /**
   * The date that this resource was last updated, given as GMT RFC 2822 format.
   */
  dateUpdated: Date;
  /**
   * The emergency_address_sid
   */
  emergencyAddressSid: string;
  /**
   * The emergency_status
   */
  emergencyStatus: IncomingPhoneNumberEmergencyStatus;
  /**
   * fetch a IncomingPhoneNumberInstance
   *
   * @returns Promise that resolves to processed IncomingPhoneNumberInstance
   */
  fetch(): Promise<IncomingPhoneNumberInstance>;
  /**
   * fetch a IncomingPhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * A human readable descriptive text for this resource, up to 64 characters long. By default, the `FriendlyName` is a nicely formatted version of the phone number.
   */
  friendlyName: string;
  /**
   * The 34 character sid of the identity Twilio should use to associate with the number. Identities are required in some regions to meet local regulations
   */
  identitySid: string;
  /**
   * The origin
   */
  origin: string;
  /**
   * The incoming phone number. e.g., +16175551212 (E.164 format)
   */
  phoneNumber: string;
  /**
   * remove a IncomingPhoneNumberInstance
   *
   * @returns Promise that resolves to processed IncomingPhoneNumberInstance
   */
  remove(): Promise<IncomingPhoneNumberInstance>;
  /**
   * remove a IncomingPhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * A 34 character string that uniquely identifies this resource.
   */
  sid: string;
  /**
   * The 34 character sid of the application Twilio should use to handle SMSs sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.
   */
  smsApplicationSid: string;
  /**
   * The HTTP method Twilio will use when requesting the above URL. Either `GET` or `POST`.
   */
  smsFallbackMethod: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML from `SmsUrl`.
   */
  smsFallbackUrl: string;
  /**
   * The HTTP method Twilio will use when making requests to the `SmsUrl`. Either `GET` or `POST`.
   */
  smsMethod: string;
  /**
   * The URL Twilio will request when receiving an incoming SMS message to this number.
   */
  smsUrl: string;
  /**
   * The URL that Twilio will request to pass status parameters (such as call ended) to your application.
   */
  statusCallback: string;
  /**
   * The HTTP method Twilio will use to make requests to the `StatusCallback` URL. Either `GET` or `POST`.
   */
  statusCallbackMethod: string;
  /**
   * The 34 character sid of the Trunk Twilio should use to handle phone calls to this number. If a `TrunkSid` is present, Twilio will ignore all of the voice urls  and voice applications above and use those set on the Trunk. Setting a `TrunkSid` will automatically delete your `VoiceApplicationSid` and vice versa.
   */
  trunkSid: string;
  /**
   * update a IncomingPhoneNumberInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed IncomingPhoneNumberInstance
   */
  update(opts?: IncomingPhoneNumberListFetchOptions): Promise<IncomingPhoneNumberInstance>;
  /**
   * update a IncomingPhoneNumberInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  update(opts: IncomingPhoneNumberListFetchOptions, callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * update a IncomingPhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  update(callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * he URI for this resource, relative to `https://api.twilio.com`.
   */
  uri: string;
  /**
   * The 34 character sid of the application Twilio should use to handle phone calls to this number. If a `VoiceApplicationSid` is present, Twilio will ignore all of the voice urls above and use those set on the application. Setting a `VoiceApplicationSid` will automatically delete your `TrunkSid` and vice versa.
   */
  voiceApplicationSid: string;
  /**
   * Look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Either `true` or `false`.
   */
  voiceCallerIdLookup: boolean;
  /**
   * The HTTP method Twilio will use when requesting the `VoiceFallbackUrl`. Either `GET` or `POST`.
   */
  voiceFallbackMethod: string;
  /**
   * The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by `Url`.
   */
  voiceFallbackUrl: string;
  /**
   * The HTTP method Twilio will use when requesting the above `Url`. Either `GET` or `POST`.
   */
  voiceMethod: string;
  /**
   * The URL Twilio will request when this phone number receives a call. The VoiceURL will  no longer be used if a `VoiceApplicationSid` or a `TrunkSid` is set.
   */
  voiceUrl: string;
}

declare class IncomingPhoneNumberContext {
  constructor(version: V2010, accountSid: string, sid: string);

  assignedAddOns: AssignedAddOnListInstance;
  /**
   * fetch a IncomingPhoneNumberInstance
   *
   * @returns Promise that resolves to processed IncomingPhoneNumberInstance
   */
  fetch(): Promise<IncomingPhoneNumberInstance>;
  /**
   * fetch a IncomingPhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * remove a IncomingPhoneNumberInstance
   *
   * @returns Promise that resolves to processed IncomingPhoneNumberInstance
   */
  remove(): Promise<IncomingPhoneNumberInstance>;
  /**
   * remove a IncomingPhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  remove(callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * update a IncomingPhoneNumberInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed IncomingPhoneNumberInstance
   */
  update(opts?: IncomingPhoneNumberListFetchOptions): Promise<IncomingPhoneNumberInstance>;
  /**
   * update a IncomingPhoneNumberInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  update(opts: IncomingPhoneNumberListFetchOptions, callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
  /**
   * update a IncomingPhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  update(callback: (error: Error | null, items: IncomingPhoneNumberInstance) => any): void;
}

export {IncomingPhoneNumberList, IncomingPhoneNumberVoiceReceiveMode, IncomingPhoneNumberListOptions, IncomingPhoneNumberInstance, IncomingPhoneNumberPayload, IncomingPhoneNumberListFetchOptions, IncomingPhoneNumberListCreateOptions, IncomingPhoneNumberListEachOptions, IncomingPhoneNumberResource, IncomingPhoneNumberEmergencyStatus, IncomingPhoneNumberListPageOptions, IncomingPhoneNumberSolution, IncomingPhoneNumberListInstance, IncomingPhoneNumberAddressRequirement, IncomingPhoneNumberPage, IncomingPhoneNumberContext}
