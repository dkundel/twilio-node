/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import Response = require('../../../../../http/response');
import V1 = require('../../../V1');

declare function WorkersCumulativeStatisticsList(version: V1, workspaceSid: string): WorkersCumulativeStatisticsListInstance

interface WorkersCumulativeStatisticsResource {
  /**
   * The account_sid
   */
  account_sid: string;
  /**
   * The activity_durations
   */
  activity_durations: string;
  /**
   * The end_time
   */
  end_time: Date;
  /**
   * The reservations_accepted
   */
  reservations_accepted: number;
  /**
   * The reservations_canceled
   */
  reservations_canceled: number;
  /**
   * The reservations_created
   */
  reservations_created: number;
  /**
   * The reservations_rejected
   */
  reservations_rejected: number;
  /**
   * The reservations_rescinded
   */
  reservations_rescinded: number;
  /**
   * The reservations_timed_out
   */
  reservations_timed_out: number;
  /**
   * The start_time
   */
  start_time: Date;
  /**
   * The url
   */
  url: string;
  /**
   * The workspace_sid
   */
  workspace_sid: string;
}

interface WorkersCumulativeStatisticsPayload extends WorkersCumulativeStatisticsResource, Page.TwilioResponsePayload {
}

interface WorkersCumulativeStatisticsSolution {
  workspaceSid: string;
}

interface WorkersCumulativeStatisticsListInstance {
  /**
   * Gets context of a single WorkersCumulativeStatistics resource
   */
  (): WorkersCumulativeStatisticsContext;
  /**
   * Gets context of a single WorkersCumulativeStatistics resource
   */
  get(): WorkersCumulativeStatisticsContext;
}

interface WorkersCumulativeStatisticsListFetchOptions {
  /**
   * The end_date
   */
  endDate?: Date;
  /**
   * The minutes
   */
  minutes?: number;
  /**
   * The start_date
   */
  startDate?: Date;
  /**
   * The task_channel
   */
  taskChannel?: string;
}

interface WorkersCumulativeStatisticsListFetchOptions {
  /**
   * The end_date
   */
  endDate?: Date;
  /**
   * The minutes
   */
  minutes?: number;
  /**
   * The start_date
   */
  startDate?: Date;
  /**
   * The task_channel
   */
  taskChannel?: string;
}

declare class WorkersCumulativeStatisticsPage extends Page<V1, WorkersCumulativeStatisticsPayload, WorkersCumulativeStatisticsResource, WorkersCumulativeStatisticsInstance> {
  constructor(version: V1, response: Response<string>, solution: WorkersCumulativeStatisticsSolution);

  /**
   * Build an instance of WorkersCumulativeStatisticsInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: WorkersCumulativeStatisticsPayload): WorkersCumulativeStatisticsInstance;
}

declare class WorkersCumulativeStatisticsInstance {
  /**
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param workspaceSid - The workspace_sid
   */
  constructor(version: V1, payload: WorkersCumulativeStatisticsPayload, workspaceSid: string);

  private _proxy: WorkersCumulativeStatisticsContext;
  /**
   * The account_sid
   */
  accountSid: string;
  /**
   * The activity_durations
   */
  activityDurations: string;
  /**
   * The end_time
   */
  endTime: Date;
  /**
   * fetch a WorkersCumulativeStatisticsInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed WorkersCumulativeStatisticsInstance
   */
  fetch(opts?: WorkersCumulativeStatisticsListFetchOptions): Promise<WorkersCumulativeStatisticsInstance>;
  /**
   * fetch a WorkersCumulativeStatisticsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts: WorkersCumulativeStatisticsListFetchOptions, callback: (error: Error | null, items: WorkersCumulativeStatisticsInstance) => any): void;
  /**
   * fetch a WorkersCumulativeStatisticsInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: WorkersCumulativeStatisticsInstance) => any): void;
  /**
   * The reservations_accepted
   */
  reservationsAccepted: number;
  /**
   * The reservations_canceled
   */
  reservationsCanceled: number;
  /**
   * The reservations_created
   */
  reservationsCreated: number;
  /**
   * The reservations_rejected
   */
  reservationsRejected: number;
  /**
   * The reservations_rescinded
   */
  reservationsRescinded: number;
  /**
   * The reservations_timed_out
   */
  reservationsTimedOut: number;
  /**
   * The start_time
   */
  startTime: Date;
  /**
   * The url
   */
  url: string;
  /**
   * The workspace_sid
   */
  workspaceSid: string;
}

declare class WorkersCumulativeStatisticsContext {
  constructor(version: V1, workspaceSid: string);

  /**
   * fetch a WorkersCumulativeStatisticsInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed WorkersCumulativeStatisticsInstance
   */
  fetch(opts?: WorkersCumulativeStatisticsListFetchOptions): Promise<WorkersCumulativeStatisticsInstance>;
  /**
   * fetch a WorkersCumulativeStatisticsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts: WorkersCumulativeStatisticsListFetchOptions, callback: (error: Error | null, items: WorkersCumulativeStatisticsInstance) => any): void;
  /**
   * fetch a WorkersCumulativeStatisticsInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: WorkersCumulativeStatisticsInstance) => any): void;
}

export {WorkersCumulativeStatisticsResource, WorkersCumulativeStatisticsListFetchOptions, WorkersCumulativeStatisticsSolution, WorkersCumulativeStatisticsListInstance, WorkersCumulativeStatisticsPage, WorkersCumulativeStatisticsPayload, WorkersCumulativeStatisticsContext, WorkersCumulativeStatisticsList, WorkersCumulativeStatisticsInstance}
