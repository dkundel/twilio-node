/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import Response = require('../../../../../http/response');
import V1 = require('../../../V1');

declare function WorkflowCumulativeStatisticsList(version: V1, workspaceSid: string, workflowSid: string): WorkflowCumulativeStatisticsListInstance

interface WorkflowCumulativeStatisticsResource {
  /**
   * The account_sid
   */
  account_sid: string;
  /**
   * The avg_task_acceptance_time
   */
  avg_task_acceptance_time: number;
  /**
   * The end_time
   */
  end_time: Date;
  /**
   * The reservations_accepted
   */
  reservations_accepted: number;
  /**
   * The reservations_canceled
   */
  reservations_canceled: number;
  /**
   * The reservations_created
   */
  reservations_created: number;
  /**
   * The reservations_rejected
   */
  reservations_rejected: number;
  /**
   * The reservations_rescinded
   */
  reservations_rescinded: number;
  /**
   * The reservations_timed_out
   */
  reservations_timed_out: number;
  /**
   * The split_by_wait_time
   */
  split_by_wait_time: string;
  /**
   * The start_time
   */
  start_time: Date;
  /**
   * The tasks_canceled
   */
  tasks_canceled: number;
  /**
   * The tasks_completed
   */
  tasks_completed: number;
  /**
   * The tasks_deleted
   */
  tasks_deleted: number;
  /**
   * The tasks_entered
   */
  tasks_entered: number;
  /**
   * The tasks_moved
   */
  tasks_moved: number;
  /**
   * The tasks_timed_out_in_workflow
   */
  tasks_timed_out_in_workflow: number;
  /**
   * The url
   */
  url: string;
  /**
   * The wait_duration_until_accepted
   */
  wait_duration_until_accepted: string;
  /**
   * The wait_duration_until_canceled
   */
  wait_duration_until_canceled: string;
  /**
   * The workflow_sid
   */
  workflow_sid: string;
  /**
   * The workspace_sid
   */
  workspace_sid: string;
}

interface WorkflowCumulativeStatisticsPayload extends WorkflowCumulativeStatisticsResource, Page.TwilioResponsePayload {
}

interface WorkflowCumulativeStatisticsSolution {
  workflowSid: string;
  workspaceSid: string;
}

interface WorkflowCumulativeStatisticsListInstance {
  /**
   * Gets context of a single WorkflowCumulativeStatistics resource
   */
  (): WorkflowCumulativeStatisticsContext;
  /**
   * Gets context of a single WorkflowCumulativeStatistics resource
   */
  get(): WorkflowCumulativeStatisticsContext;
}

interface WorkflowCumulativeStatisticsListFetchOptions {
  /**
   * The end_date
   */
  endDate?: Date;
  /**
   * The minutes
   */
  minutes?: number;
  /**
   * The split_by_wait_time
   */
  splitByWaitTime?: string;
  /**
   * The start_date
   */
  startDate?: Date;
  /**
   * The task_channel
   */
  taskChannel?: string;
}

interface WorkflowCumulativeStatisticsListFetchOptions {
  /**
   * The end_date
   */
  endDate?: Date;
  /**
   * The minutes
   */
  minutes?: number;
  /**
   * The split_by_wait_time
   */
  splitByWaitTime?: string;
  /**
   * The start_date
   */
  startDate?: Date;
  /**
   * The task_channel
   */
  taskChannel?: string;
}

declare class WorkflowCumulativeStatisticsPage extends Page<V1, WorkflowCumulativeStatisticsPayload, WorkflowCumulativeStatisticsResource, WorkflowCumulativeStatisticsInstance> {
  constructor(version: V1, response: Response<string>, solution: WorkflowCumulativeStatisticsSolution);

  /**
   * Build an instance of WorkflowCumulativeStatisticsInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: WorkflowCumulativeStatisticsPayload): WorkflowCumulativeStatisticsInstance;
}

declare class WorkflowCumulativeStatisticsInstance {
  /**
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param workspaceSid - The workspace_sid
   * @param workflowSid - The workflow_sid
   */
  constructor(version: V1, payload: WorkflowCumulativeStatisticsPayload, workspaceSid: string, workflowSid: string);

  private _proxy: WorkflowCumulativeStatisticsContext;
  /**
   * The account_sid
   */
  accountSid: string;
  /**
   * The avg_task_acceptance_time
   */
  avgTaskAcceptanceTime: number;
  /**
   * The end_time
   */
  endTime: Date;
  /**
   * fetch a WorkflowCumulativeStatisticsInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed WorkflowCumulativeStatisticsInstance
   */
  fetch(opts?: WorkflowCumulativeStatisticsListFetchOptions): Promise<WorkflowCumulativeStatisticsInstance>;
  /**
   * fetch a WorkflowCumulativeStatisticsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts: WorkflowCumulativeStatisticsListFetchOptions, callback: (error: Error | null, items: WorkflowCumulativeStatisticsInstance) => any): void;
  /**
   * fetch a WorkflowCumulativeStatisticsInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: WorkflowCumulativeStatisticsInstance) => any): void;
  /**
   * The reservations_accepted
   */
  reservationsAccepted: number;
  /**
   * The reservations_canceled
   */
  reservationsCanceled: number;
  /**
   * The reservations_created
   */
  reservationsCreated: number;
  /**
   * The reservations_rejected
   */
  reservationsRejected: number;
  /**
   * The reservations_rescinded
   */
  reservationsRescinded: number;
  /**
   * The reservations_timed_out
   */
  reservationsTimedOut: number;
  /**
   * The split_by_wait_time
   */
  splitByWaitTime: string;
  /**
   * The start_time
   */
  startTime: Date;
  /**
   * The tasks_canceled
   */
  tasksCanceled: number;
  /**
   * The tasks_completed
   */
  tasksCompleted: number;
  /**
   * The tasks_deleted
   */
  tasksDeleted: number;
  /**
   * The tasks_entered
   */
  tasksEntered: number;
  /**
   * The tasks_moved
   */
  tasksMoved: number;
  /**
   * The tasks_timed_out_in_workflow
   */
  tasksTimedOutInWorkflow: number;
  /**
   * The url
   */
  url: string;
  /**
   * The wait_duration_until_accepted
   */
  waitDurationUntilAccepted: string;
  /**
   * The wait_duration_until_canceled
   */
  waitDurationUntilCanceled: string;
  /**
   * The workflow_sid
   */
  workflowSid: string;
  /**
   * The workspace_sid
   */
  workspaceSid: string;
}

declare class WorkflowCumulativeStatisticsContext {
  constructor(version: V1, workspaceSid: string, workflowSid: string);

  /**
   * fetch a WorkflowCumulativeStatisticsInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed WorkflowCumulativeStatisticsInstance
   */
  fetch(opts?: WorkflowCumulativeStatisticsListFetchOptions): Promise<WorkflowCumulativeStatisticsInstance>;
  /**
   * fetch a WorkflowCumulativeStatisticsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts: WorkflowCumulativeStatisticsListFetchOptions, callback: (error: Error | null, items: WorkflowCumulativeStatisticsInstance) => any): void;
  /**
   * fetch a WorkflowCumulativeStatisticsInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: WorkflowCumulativeStatisticsInstance) => any): void;
}

export { WorkflowCumulativeStatisticsContext, WorkflowCumulativeStatisticsInstance, WorkflowCumulativeStatisticsList, WorkflowCumulativeStatisticsListFetchOptions, WorkflowCumulativeStatisticsListInstance, WorkflowCumulativeStatisticsPage, WorkflowCumulativeStatisticsPayload, WorkflowCumulativeStatisticsResource, WorkflowCumulativeStatisticsSolution }
