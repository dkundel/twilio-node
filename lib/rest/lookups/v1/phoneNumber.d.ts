/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../base/Page');
import Response = require('../../../http/response');
import V1 = require('../V1');

declare function PhoneNumberList(version: V1): PhoneNumberListInstance

type PhoneNumberType = 'landline'|'mobile'|'voip';

interface PhoneNumberResource {
  /**
   * The add_ons
   */
  add_ons: string;
  /**
   * The caller_name
   */
  caller_name: string;
  /**
   * The carrier
   */
  carrier: string;
  /**
   * The country_code
   */
  country_code: string;
  /**
   * The national_format
   */
  national_format: string;
  /**
   * The phone_number
   */
  phone_number: string;
  /**
   * The url
   */
  url: string;
}

interface PhoneNumberPayload extends PhoneNumberResource, Page.TwilioResponsePayload {
}

interface PhoneNumberSolution {
}

interface PhoneNumberListInstance {
  /**
   * Gets context of a single PhoneNumber resource
   *
   * @param phoneNumber - The phone_number
   */
  (phoneNumber: string): PhoneNumberContext;
  /**
   * Gets context of a single PhoneNumber resource
   *
   * @param phoneNumber - The phone_number
   */
  get(phoneNumber: string): PhoneNumberContext;
}

interface PhoneNumberListFetchOptions {
  /**
   * The add_ons
   */
  addOns?: string[];
  /**
   * The add_ons_data
   */
  addOnsData?: object;
  /**
   * The country_code
   */
  countryCode?: string;
  /**
   * The type
   */
  type?: string[];
}

interface PhoneNumberListFetchOptions {
  /**
   * The add_ons
   */
  addOns?: string[];
  /**
   * The add_ons_data
   */
  addOnsData?: object;
  /**
   * The country_code
   */
  countryCode?: string;
  /**
   * The type
   */
  type?: string[];
}

declare class PhoneNumberPage extends Page<V1, PhoneNumberPayload, PhoneNumberResource, PhoneNumberInstance> {
  constructor(version: V1, response: Response<string>, solution: PhoneNumberSolution);

  /**
   * Build an instance of PhoneNumberInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: PhoneNumberPayload): PhoneNumberInstance;
}

declare class PhoneNumberInstance {
  /**
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param phoneNumber - The phone_number
   */
  constructor(version: V1, payload: PhoneNumberPayload, phoneNumber: string);

  private _proxy: PhoneNumberContext;
  /**
   * The add_ons
   */
  addOns: string;
  /**
   * The caller_name
   */
  callerName: string;
  /**
   * The carrier
   */
  carrier: string;
  /**
   * The country_code
   */
  countryCode: string;
  /**
   * fetch a PhoneNumberInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed PhoneNumberInstance
   */
  fetch(opts?: PhoneNumberListFetchOptions): Promise<PhoneNumberInstance>;
  /**
   * fetch a PhoneNumberInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts: PhoneNumberListFetchOptions, callback: (error: Error | null, items: PhoneNumberInstance) => any): void;
  /**
   * fetch a PhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: PhoneNumberInstance) => any): void;
  /**
   * The national_format
   */
  nationalFormat: string;
  /**
   * The phone_number
   */
  phoneNumber: string;
  /**
   * The url
   */
  url: string;
}

declare class PhoneNumberContext {
  constructor(version: V1, phoneNumber: string);

  /**
   * fetch a PhoneNumberInstance
   *
   * @param opts - Options for request
   *
   * @returns Promise that resolves to processed PhoneNumberInstance
   */
  fetch(opts?: PhoneNumberListFetchOptions): Promise<PhoneNumberInstance>;
  /**
   * fetch a PhoneNumberInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts: PhoneNumberListFetchOptions, callback: (error: Error | null, items: PhoneNumberInstance) => any): void;
  /**
   * fetch a PhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback: (error: Error | null, items: PhoneNumberInstance) => any): void;
}

export {PhoneNumberListInstance, PhoneNumberResource, PhoneNumberInstance, PhoneNumberPayload, PhoneNumberSolution, PhoneNumberType, PhoneNumberPage, PhoneNumberList, PhoneNumberListFetchOptions, PhoneNumberContext}
